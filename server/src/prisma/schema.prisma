generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  name      String?
  bio       String?
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  posts     Post[]
  comments  Comment[]
  likes     Like[]
  followers Follow[]  @relation("following")
  following Follow[]  @relation("followers")
}

model Post {
  id        String    @id @default(uuid())
  content   String
  authorId  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  likes     Like[]
  comments  Comment[]
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  authorId  String
  postId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Like {
  id        String    @id @default(uuid())
  userId    String
  postId    String
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Follow {
  id          String    @id @default(uuid())
  followerId  String
  followingId String
  createdAt   DateTime  @default(now())

  follower    User      @relation("followers", fields: [followerId], references: [id], onDelete: Cascade)
  following   User      @relation("following", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
}
